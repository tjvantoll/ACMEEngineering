//-------------------------------------------------------------------------
// <Auto-generated file - do not modify!>
//
// This code was generated automatically by Kinvey Studio.
//
// Changes to this file may cause undesired behavior and will be lost
// the next time the code regenerates.
//
// You can write your custom code in the home.component.tns.ts file instead.
// Find more information on https://devcenter.kinvey.com/guides/studio-extension-points.
//-------------------------------------------------------------------------
import { Component, Injector } from '@angular/core';
import { Page } from 'tns-core-modules/ui/page';
import { GestureTypes, SwipeDirection, SwipeGestureEventData } from 'tns-core-modules/ui/gestures';
import { ActivatedRoute } from '@angular/router';

import { NavigationService } from '@src/app/core/services/navigation.service';
import { UtilsService } from '@src/app/core/services/utils.service';
import { DataServiceFactory, DataServiceFactoryOptions } from '@src/app/core/data/data-service.factory';

@Component({
    templateUrl: './home.component.html',
    styleUrls: ['./home.component.css']
})
export class HomeViewBaseComponent {
    public config = {};

    protected activatedRoute: ActivatedRoute;
    protected navigationService: NavigationService;
    protected utilsService: UtilsService;
    protected serviceFactory: DataServiceFactory;
    protected page: Page;

    constructor(public injector: Injector) {
        this.page = injector.get(Page);
        this.activatedRoute = injector.get(ActivatedRoute);
        this.navigationService = injector.get(NavigationService);
        this.utilsService = injector.get(UtilsService);
        this.serviceFactory = injector.get(DataServiceFactory);
        this.initDataServices(this.getDataServiceOptions());

        this.page.enableSwipeBackNavigation = false;
    }

    onViewLoaded({ object: view }) {
        if (view.swipeBound) {
            return;
        }

        const swipeHandler = ({ direction }: SwipeGestureEventData) => {
            if (direction === SwipeDirection.right) {
                this.navigationService.goBack(this.activatedRoute);
                return;
            }
        };

        view.on(GestureTypes.swipe, swipeHandler);
        view.swipeBound = true;
    }

    protected getDataServiceOptions(): { [key: string]: DataServiceFactoryOptions<any> } {
        return {};
    }

    protected initDataServices(options: { [key: string]: DataServiceFactoryOptions<any> }) {}
}
