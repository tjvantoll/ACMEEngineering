//-------------------------------------------------------------------------
// <Auto-generated file - do not modify!>
//
// This code was generated automatically by Kinvey Studio.
//
// Changes to this file may cause undesired behavior and will be lost
// the next time the code regenerates.
//
// You can write your custom code in the login.component.ts file instead.
// Find more information on https://devcenter.kinvey.com/guides/studio-extension-points.
//-------------------------------------------------------------------------
import { Component, OnInit, AfterViewInit, OnDestroy, Injector } from '@angular/core';
import { Router } from '@angular/router';
import { FormGroup, FormControl, Validators } from '@angular/forms';

import { Observable } from 'rxjs';

import { AuthenticationService } from '@src/app/core/auth/authentication.service';

@Component({
    templateUrl: './login.component.html',
    styleUrls: ['./login.component.css']
})
export class LoginViewBaseComponent implements OnInit, AfterViewInit, OnDestroy {
    public config = {
        title: 'Login'
    };

    public loginForm: FormGroup;
    public loginError: string;

    protected router: Router;
    protected authenticationService: AuthenticationService;

    constructor(protected injector: Injector) {
        this.router = injector.get(Router);
        this.authenticationService = injector.get(AuthenticationService);

        this.loginForm = new FormGroup({
            userName: new FormControl('', Validators.required),
            password: new FormControl('', Validators.required)
        });
    }

    public login() {
        const { userName, password } = this.loginForm.value;

        this.authenticationService
            .signIn({ userName, password })
            .toPromise()
            .then(() => {
                const onLoginResult = this['onLogin']({ userName });
                if (onLoginResult instanceof Observable) {
                    onLoginResult.subscribe(() => this.router.navigate(['auth-callback']));
                    return;
                }

                this.router.navigate(['auth-callback']);
            })
            .catch(error => {
                this.loginError = 'Invalid credentials';
            });
    }

    public ngOnInit(): void {
        this['onInit']();
    }

    public ngAfterViewInit(): void {
        this['onShow']();
    }

    public ngOnDestroy(): void {
        this['onHide']();
    }
}
