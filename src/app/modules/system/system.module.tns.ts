//-------------------------------------------------------------------------
// <Auto-generated file - do not modify!>
//
// This code was generated automatically by Kinvey Studio.
//
// Changes to this file may cause undesired behavior and will be lost
// the next time the code regenerates.
//
// Find more information on https://devcenter.kinvey.com/guides/studio-extension-points.
//-------------------------------------------------------------------------
import { NO_ERRORS_SCHEMA, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SharedModule } from '@src/app/shared/shared.module';
import { SystemRoutingModule } from '@src/app/modules/system/system-routing.module';

import { HomeViewBaseComponent } from '@src/app/modules/system/home/home.base.component';
import { HomeViewComponent } from '@src/app/modules/system/home/home.component';
import { LoginViewBaseComponent } from '@src/app/modules/system/login/login.base.component';
import { LoginViewComponent } from '@src/app/modules/system/login/login.component';
import { RegisterViewBaseComponent } from '@src/app/modules/system/register/register.base.component';
import { RegisterViewComponent } from '@src/app/modules/system/register/register.component';

import { config, transformConfig } from '@src/app/modules/system/system.config';

const configMeta: NgModule = {
    providers: [...config.providers],
    declarations: [
        HomeViewBaseComponent,
        HomeViewComponent,
        LoginViewBaseComponent,
        LoginViewComponent,
        RegisterViewBaseComponent,
        RegisterViewComponent,
        ...config.declarations
    ],
    imports: [CommonModule, SharedModule, SystemRoutingModule, ...config.imports],
    exports: [...config.exports],
    entryComponents: [...config.entryComponents],
    bootstrap: [...config.bootstrap],
    schemas: [NO_ERRORS_SCHEMA, ...config.schemas],
    jit: config.jit
};

if (config.id) {
    configMeta.id = config.id;
}

transformConfig(configMeta);

@NgModule(configMeta)
export class SystemModule {}
